apiVersion: v1
kind: Service
metadata:
  name: zk-cluster
  labels:
    app: zookeeper
spec:
  ports:
  - port: 2181
    name: client
  - port: 2888
    name: followers
  - port: 3888
    name: election
  # Make Zookeeper do its own discovery
  clusterIP: None
  selector:
    app: zookeeper
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: zk
spec:
  # AWS fails if PV does not exist already
  volumeClaimTemplates:
  - metadata:
      name: zk-data
    spec:
      storageClassName: default
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
  - metadata:
      name: zk-logs
    spec:
      storageClassName: default
      accessModes: 
        - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
          
  serviceName: zk-cluster
  replicas: 3
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - name: zookeeper
        image: 00112233.dkr.ecr.us-east-1.amazonaws.com/zookeeper:3.4.11
        imagePullPolicy: Always
        ports:
          - containerPort: 2181
            name: "client"
          - containerPort: 2888
            name: "followers"
          - containerPort: 3888
            name: "election"
        volumeMounts:
        - name: zk-data
          mountPath: /opt/zookeeper/data
        - name: zk-logs
          mountPath: /opt/zookeeper/logs
        env:
        - name: pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: name_space
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: service_name
          value: "zk-cluster"
        - name: replica_set
          value: "3"
        - name: log_level
          value: "DEBUG"
